services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: tech-challenge-go-app-payments
    restart: always
    ports:
      - "3002:8080"
    volumes:
      - ./:/app
    command: go run main.go
    environment:
      POSTGRES_DB: tech-challenge-fase-4-payments
      POSTGRES_USER: tech-challenge-fase-4-payments
      POSTGRES_PASSWORD: tech-challenge-fase-4-payments
      AWS_REGION: us-east-1
      AWS_USER_POOL_ID: us-east-1_3ofqHwfxr
    depends_on:
      dbpayments:
        condition: service_healthy
  dbpayments:
    image: postgres:16.3
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tech-challenge-fase-4-payments
      POSTGRES_USER: tech-challenge-fase-4-payments
      POSTGRES_PASSWORD: tech-challenge-fase-4-payments
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tech-challenge-fase-4-payments"]
      interval: 1s
      timeout: 1s
      retries: 5
  pgadmin4:
    image: elestio/pgadmin:REL-8_6
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@challenge.com
      PGADMIN_DEFAULT_PASSWORD: 12345678
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "8081:8080"
    volumes:
      - ./data/servers.json:/pgadmin4/servers.json
    depends_on:
      dbpayments:
        condition: service_healthy
  migrate:
    build:
      context: ./migrations
      dockerfile: Dockerfile
    image: local-migrate-payments
    environment:
      DB_URI: "postgres://tech-challenge-fase-4-payments:tech-challenge-fase-4-payments@dbpayments/tech-challenge-fase-4-payments?sslmode=disable"
    restart: on-failure:5
    depends_on:
      dbpayments:
        condition: service_healthy
  # migrate:
  #   image: migrate/migrate
  #   restart: on-failure:5
  #   command:
  #     [
  #       "-database",
  #       "postgres://tech-challenge-fase:tech-challenge-fase@db/tech-challenge-fase?sslmode=disable",
  #       "-path",
  #       "/migrations",
  #       "up",
  #     ]
  #   volumes:
  #     - ./migrations:/migrations
  #   depends_on:
  #     db:
  #       condition: service_healthy
